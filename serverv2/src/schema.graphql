scalar Date

type Query {
  getMessages(id: ID!): [Message]
  getChats(chatIds: [ID!]): [Chat]!
}

type Mutation {
  addMessage(id: ID!, message: String!, senderId: ID!): Message!
  login(username: String!, password: String!): AuthenticationPayload!
  #addChat(chatName: String!, userId: ID!): Chat
  #register(email: String!, password: String!): User
}

type Subscription {
  message(chatId: ID!): Message!
}

type User {
  id: ID!
  email: String!
  chats: [Chat]
}

type Chat {
  id: ID!
  name: String
  messages: [Message]
  friends: [User]
}

type Message {
  id: ID!
  message: String
  chat: Chat
  user: User
  createdAt: Date
}

type AuthenticationPayload {
  user: User!
  token: String!
}
